package main

import (
	"bytes"
	"fmt"
	"strconv"
	"strings"
)

/**
 * 二叉树的序列化与反序列化
 * https://leetcode-cn.com/problems/serialize-and-deserialize-binary-tree/submissions/
 */
func main() {

	//var testcase = "[5,2,3,null,null,2,4,3,1]"
	//var testcase = "[1,2,null,3,null,4,null,5]"
	var testcase = "[6,9,2,6,8,8,6,7,9,9,2,4,0,0,7,8,4,4,3,4,8,5,1,3,2,8,4,6,0,2,0,8,5,0,9,9,3,8,9,7,7,4,2,2,0,1,8,7,2,9,6,7,8,3,7,5,7,1,9,3,4,0,6,1,1,5,0,3,0,5,8,3,8,3,1,7,8,8,0,1,4,2,1,1,7,7,3,7,2,3,5,8,8,8,5,7,9,4,6,9,2,6,5,1,6,6,4,8,1,5,0,9,9,2,1,4,3,4,2,2,2,5,8,1,1,2,0,7,9,9,7,2,9,2,8,0,4,8,5,7,7,4,8,2,1,2,2,6,3,7,0,1,4,7,9,7,6,8,3,5,3,2,0,1,6,7,2,5,2,9,5,0,8,5,7,6,7,1,7,9,0,3,5,9,3,1,9,1,0,3,1,6,1,5,2,0,4,8,6,3,4,9,4,8,4,4,1,0,5,3,3,9,1,6,4,3,8,6,8,9,1,9,9,8,1,5,6,0,9,9,7,3,9,6,7,0,5,2,0,6,9,6,7,1,1,9,3,1,5,6,0,4,3,3,9,0,4,4,5,0,6,2,5,9,7,5,1,7,3,3,0,6,4,1,7,2,9,3,3,6,3,8,6,0,6,4,3,7,3,1,2,8,5,3,4,8,1,8,3,8,1,0,2,8,4,5,9,1,4,2,0,3,9,1,1,5,4,7,5,6,0,4,3,5,7,3,6,5,6,4,9,6,4,4,5,4,8,8,8,6,2,2,2,8,5,2,2,6,1,9,0,9,1,4,8,4,2,4,5,1,8,6,7,0,5,9,2,7,2,2,3,6,9,7,6,0,6,0,7,8,8,9,5,5,5,2,1,2,2,6,2,9,6,5,2,8,7,3,6,0,4,4,3,3,6,4,0,9,4,2,1,5,7,7,3,9,7,3,2,6,5,0,9,5,8,2,2,3,2,4,7,0,5,1,5,1,1,3,0,7,9,9,5,9,8,5,5,9,4,2,9,4,2,1,8,1,4,7,8,5,7,3,8,8,0,6,0,0,0,3,1,3,1,2,0,4,3,3,0,2,3,9,7,7,7,5,7,7,6,2,1,1,5,8,0,4,9,6,4,1,8,4,6,2,7,2,5,7,3,6,0,6,4,3,5,8,1,7,1,1,3,6,3,0,6,3,9,4,7,4,7,8,4,3,0,7,4,1,8,8,5,9,0,4,7,9,8,3,3,9,5,4,1,3,9,8,8,0,4,0,0,9,6,2,3,5,5,8,5,7,9,4,7,2,8,3,3,6,2,0,5,5,9,6,9,4,5,6,6,3,7,1,4,7,2,1,8,3,0,5,8,1,4,6,9,2,3,5,2,6,1,2,8,9,9,8,5,9,5,2,9,4,4,1,5,9,6,9,5,5,5,3,1,1,5,8,2,9,7,1,7,0,0,9,1,8,9,2,3,0,5,1,2,0,8,4,8,9,3,4,4,8,4,1,7,0,4,7,0,7,2,1,8,6,8,8,7,3,6,0,9,5,5,0,4,8,4,1,9,0,6,9,0,0,3,2,2,2,3,9,9,9,7,8,5,5,0,1,2,9,5,2,4,2,9,3,4,5,6,5,0,2,5,9,4,9,0,6,9,3,5,4,3,3,4,7,8,6,9,1,9,7,3,5,2,2,7,9,3,8,0,4,2,0,1,2,2,4,2,8,7,1,2,1,9,8,5,4,9,7,6,0,4,4,4,6,7,7,1,3,9,5,1,8,7,1,6,4,3,7,7,2,5,6,4,4,1,1,2,9,8,5,3,2,0,6,8,4,6,5,6,5,7,7,9,1,9,9,6,2,4,2,3,0,5,2,9,7,8,3,8,6,0,4,8,7,2,2,2,4,2,0,6,3,7,7,3,3,8,9,7,8,1,0,4,5,1,6,9,5,2,9,8,3,4,7,3,7,6,9,5,7,6,4,3,3,2,9,0,9,8,9,3,3,7,5,0,9,5,2,4,5,6,6,5,1,9,1,5,1,3,5,6,2,4,2,0,4,5,3,1,6,3,5,1,5,5,7,5,7,8,4,1,4,1,5,0,9,6,6,2,4,4,2,5,4,9,7,4,1,1,5,1,9,9,0,1,6,6,0,0,6,8,4,3,2,9,4,6,1,3,4,0,9,7,1,4,6,8,1,2,3,6,2,7,8,9,6,1,2,4,8,9,5,7,2,6,3,9,4,2,9,7,2,5,0,0,2,5,0,3,6,1,1,7,0,7,6,0,2,3,6,0,6,3,8,6,1,9,6,8,2,9,8,8,2,7,6,4,2,3,3,8,8,4,7,9,2,7,3,6,6,8,6,2,1,0,4,4,7,0,2,9,7,5,0,3,5,8,4,3,9,2,4,5,0,2,5,6,9,5,4,9,4,3,9,2,7,5,5,1,6,5,5,7,1,1,6,2,0,2,2,9,7,8,6,5,8,4,5,3,9,0,9,9,5,4,0,4,9,5,6,1,4,2,4,6,0,1,8,9,1,4,4,4,4,1,6,7,6,6,6,5,2,6,3,6,5,4,6,0,4,1,0,7,8,5,3,9,2,5,5,3,7,5,9,2,6,5,1,9,5,4,8,2,1,2,1,6,1,0,0,8,8,5,3,8,7,4,8,6,3,5,1,3,4,4,9,0,9,3,3,1,7,5,9,4,9,0,2,1,5,5,6,6,8,4,7,2,5,4,4,8,4,1,6,1,4,1,2,0,5,2,3,0,9,4,6,2,5,3,9,3,3,6,2,1,5,3,9,0,1,2,0,7,5,3,7,7,0,9,5,6,7,0,6,3,0,7,5,2,9,5,8,7,8,0,9,5,2,6,0,4,4,7,9,9,2,0,7,0,0,7,6,7,7,7,9,6,6,5,5,8,0,2,5,7,4,6,7,5,2,0,7,7,4,2,7,0,3,3,8,6,5,8,2,3,9,2,9,9,7,6,7,0,5,0,8,2,1,9,3,2,3,0,5,6,7,8,7,7,4,9,0,9,4,6,2,8,6,0,1,2,1,9,3,9,8,6,4,5,2,1,3,2,4,8,6,8,1,4,0,9,0,8,3,9,6,7,1,1,6,2,2,8,4,9,0,4,1,7,6,9,7,7,0,1,0,3,8,1,7,7,0,0,4,8,3,7,5,6,7,0,5,8,7,3,3,9,0,0,8,4,2,3,0,5,4,1,6,8,8,5,9,2,7,7,0,6,4,5,6,7,0,5,9,5,8,0,5,1,8,3,7,4,5,9,4,6,2,7,1,3,2,0,0,2,1,4,9,9,1,4,6,3,3,1,0,4,6,9,3,3,9,5,6,1,2,5,0,4,1,2,1,7,8,2,4,9,9,6,4,1,7,2,1,4,6,5,2,2,2,8,5,9,2,6,0,3,8,6,2,4,4,6,2,1,3,2,4,7,1,3,4,5,6,2,4,0,0,7,2,4,7,5,2,6,3,5,3,4,1,5,3,3,2,0,8,2,3,7,1,9,0,2,5,0,7,7,4,3,7,2,4,6,8,2,0,5,1,4,4,4,2,5,4,5,6,5,9,8,4,6,1,7,1,3,3,4,5,2,7,9,7,6,4,9,9,7,9,9,9,7,2,8,4,3,5,1,1,0,4,2,1,7,7,2,0,8,9,1,6,0,0,4,4,7,2,9,2,0,8,6,9,8,6,5,4,4,5,0,8,4,3,8,9,7,2,9,7,6,6,3,1,1,0,7,0,4,6,4,3,4,7,6,5,1,5,7,0,2,0,2,6,4,2,9,2,5,3,1,4,6,8,7,8,8,3,7,7,8,9,7,5,4,7,1,9,9,3,9,8,2,2,9,4,5,9,0,7,2,3,1,9,7,5,4,6,3,5,1,2,5,2,7,6,0,9,7,0,3,2,9,0,9,1,0,2,1,5,9,6,7,4,0,1,6,8,9,3,1,4,1,6,6,1,0,7,5,7,2,7,2,6,2,6,6,0,6,8,6,6,8,3,8,5,4,8,4,5,3,9,1,7,0,6,6,3,4,2,0,3,2,5,5,7,0,4,4,7,0,6,2,0,3,6,3,4,7,8,6,6,7,3,4,2,9,7,6,9,7,5,9,5,3,6,9,7,7,6,9,7,5,2,9,2,7,0,5,3,9,2,9,1,1,1,6,9,7,8,6,9,1,4,4,3,9,2,6,5,9,1,2,9,7,2,5,0,1,3,3,2,8,8,3,4,4,3,4,3,4,2,0,5,7,1,8,7,9,9,7,6,7,6,7,3,4,0,1,3,9,7,0,3,7,9,2,5,2,6,6,3,2,7,3,9,4,2,0,8,7,5,3,2,3,7,0,6,1,6,2,2,1,9,4,1,3,7,7,9,0,5,0,9,6,6,4,2,8,8,1,6,5,5,6,6,1,1,5,6,2,4,6,5,2,6,7,3,3,9,0,3,9,9,1,8,5,1,4,5,3,5,9,2,8,6,8,8,7,1,1,5,8,4,1,8,2,5,0,9,0,8,7,3,8,2,1,8,4,5,7,3,6,7,7,2,2,0,8,2,0,0,7,9,7,0,8,4,5,1,3,8,3,5,6,7,2,5,2,7,5,1,3,5,9,0,6,3,1,8,2,1,2,6,8,8,7,2,5,4,8,9,7,8,9,1,2,6,0,8,1,8,7,7,5,5,4,8,3,8,6,4,4,9,9,2,8,5,3,1,3,3,0,8,4,5,8,4,8,8,3,2,7,1,1,6,9,6,7,2,1,8,0,6,5,2,2,1,2,8,7,7,4,1,2,0,1,0,4,9,5,1,8,2,8,1,0,4,5,7,9,2,7,9,2,4,9,9,4,8,1,5,4,3,9,9,5,8,2,8,7,8,9,0,0,4,9,6,3,6,5,0,4,8,1,6,3,5,7,6,0,7,8,4,8,4,6,8,1,0,3,5,8,6,1,0,3,8,3,1,6,6,8,9,4,4,0,6,4,4,1,2,4,3,1,0,4,0,5,3,2,9,0,6,3,3,6,1,3,7,3,8,8,3,6,9,7,2,5,5,2,3,5,5,7,1,4,0,1,7,8,7,1,4,4,3,2,3,6,3,9,3,4,0,6,0,2,7,1,9,8,9,0,3,4,8,1,2,8,4,0,9,5,5,9,0,5,3,0,9,9,7,9,5,7,0,5,2,7,0,7,7,3,6,3,5,8,0,7,8,4,3,1,9,5,9,0,8,6,5,0,9,4,8,4,1,1,2,0,8,2,9,8,8,9,4,1,2,2,1,0,0,6,8,8,1,6,1,7,2,1,7,9,4,4,0,9,4,3,1,1,2,5,5,8,4,8,4,4,7,4,2,5,9,4,8,4,9,4,3,7,2,2,5,2,4,5,9,7,3,7,8,4,2,4,9,3,0,1,0,3,8,3,7,3,9,2,1,9,1,0,9,0,2,5,2,4,2,7,0,9,1,4,2,2,3,9,0,2,8,1,6,1,8,9,9,1,8,3,3,7,9,0,8,8,8,7,7,8,2,5,8,5,7,1,5,2,6,0,8,1,7,8,0,0,2,2,3,7,3,9,5,7,0,2,1,3,4,6,2,2,8,6,5,2,2,2,1,8,4,5,5,7,3,8,0,5,3,4,8,4,0,2,0,5,4,4,9,2,1,4,1,4,8,6,3,7,5,8,5,5,5,3,9,5,2,6,5,0,2,8,0,3,4,8,7,6,9,3,5,2,7,7,2,2,3,0,9,1,3,2,6,6,1,1,1,2,4,6,4,9,3,2,9,3,0,1,1,8,5,0,6,1,6,4,6,3,6,0,4,3,9,4,8,2,3,4,2,6,1,3,6,9,6,8,6,4,8,6,3,9,4,8,0,5,2,2,5,0,1,4,6,4,8,4,9,6,5,2,1,3,8,0,8,6,9,0,2,0,4,9,6,4,6,1,0,7,5,0,2,4,0,3,3,1,1,0,5,9,6,1,0,1,5,3,5,3,9,2,9,2,6,1,1,6,1,8,2,9,3,6,7,5,8,3,7,8,7,0,8,6,2,7,7,2,3,3,8,5,5,2,4,2,5,5,6,0,5,3,2,8,4,1,3,9,9,9,3,6,3,4,8,0,3,4,1,5,2,8,3,5,3,9,2,6,1,9,9,5,9,6,8,9,9,6,8,2,3,7,8,1,8,5,5,0,4,8,3,5,9,4,4,7,0,2,6,5,3,5,5,4,9,0,8,9,7,0,1,1,6,7,0,2,6,5,2,8,7,1,2,3,4,7,4,8,0,6,1,5,7,5,9,5,9,2,5,5,7,4,4,2,4,2,0,9,5,5,3,7,0,4,9,4,3,8,7,3,1,1,0,2,9,9,3,2,3,1,5,1,8,2,8,0,5,4,4,8,9,0,8,4,3,0,7,3,0,9,2,7,7,5,5,0,2,0,6,9,4,7,9,9,6,0,0,7,9,0,4,6,4,9,6,3,2,8,6,0,9,0,8,8,4,3,7,4,9,3,3,7,1,5,4,1,5,2,8,2,3,4,5,9,9,7,4,8,9,4,3,8,8,5,4,5,3,4,4,2,7,7,2,5,2,3,9,5,9,4,0,9,2,8,1,5,6,9,9,6,9,8,0,8,7,8,4,5,5,8,6,9,0,4,4,3,2,2,9,4,3,8,8,8,5,9,0,8,1,5,0,4,8,6,3,9,6,4,9,0,1,4,9,1,1,5,0,6,8,5,4,6,5,8,1,1,5,7,8,1,8,4,8,9,6,5,5,9,6,1,6,8,5,3,8,9,1,6,5,2,9,5,8,5,0,9,3,5,9,7,2,9,8,6,5,2,5,0,3,3,4,6,5,3,0,4,3,8,8,8,4,8,0,6,4,9,7,4,7,3,0,2,0,2,4,8,9,6,4,3,7,9,0,3,0,9,8,7,4,2,3,9,7,3,8,6,4,2,2,7,5,4,7,9,6,9,4,7,1,1,7,4,8,9,9,0,6,1,3,0,6,5,0,2,0,3,3,6,5,5,8,8,0,2,5,5,8,0,5,4,2,2,8,9,4,7,4,5,7,3,8,4,3,0,6,1,3,0,6,0,2,8,0,2,3,7,8,5,2,4,7,0,6,3,4,1,3,1,3,0,9,0,3,6,8,5,7,9,8,5,2,8,0,0,5,1,8,3,1,9,5,0,0,6,3,5,4,3,0,6,9,5,6,6,7,9,4,5,4,1,8,2,6,9,4,8,6,7,6,6,5,4,7,6,0,1,6,2,9,0,4,3,6,3,9,7,4,9,2,9,3,5,7,0,7,0,1,2,8,2,1,8,9,9,8,6,5,4,7,0,5,7,5,5,4,7,6,3,5,9,5,1,4,8,5,5,6,1,0,1,4,8,1,4,3,4,1,3,5,3,6,5,9,8,4,5,4,8,8,9,6,1,6,8,6,8,3,1,0,0,3,1,1,9,2,3,4,6,0,2,3,6,4,9,3,8,6,9,5,6,1,5,4,7,4,9,0,1,7,2,1,6,2,5,1,7,4,5,6,4,6,7,4,3,5,3,2,2,8,9,9,7,5,8,5,0,0,7,2,1,6,2,8,9,0,8,3,0,8,4,6,6,5,3,7,7,0,7,0,7,0,9,6,7,1,0,2,2,6,7,5,4,7,4,2,1,0,5,2,9,6,0,6,5,3,9,7,4,2,5,7,9,6,1,2,7,5,9,0,6,2,3,3,3,8,3,1,6,3,0,7,8,4,2,4,7,1,9,9,2,5,3,0,6,7,4,0,4,2,2,8,0,7,2,4,8,4,6,4,5,3,5,8,7,7,6,0,6,2,0,0,6,0,2,9,6,8,3,3,5,5,1,7,7,0,3,9,4,1,4,7,7,0,3,5,9,0,8,4,5,1,6,9,0,7,3,6,4,7,9,5,4,4,0,0,5,8,3,9,9,2,6,4,3,0,7,5,5,0,4,2,6,7,1,4,9,0,1,2,9,1,6,8,1,9,4,8,4,4,4,5,9,9,2,3,4,5,7,9,8,8,2,5,2,5,7,4,6,2,7,0,9,0,7,4,2,1,7,1,2,6,0,5,0,8,8,7,1,6,5,5,5,7,3,5,2,5,0,1,5,9,5,4,2,6,1,0,5,1,0,4,9,2,9,1,2,5,5,4,2,4,0,9,6,9,4,2,3,9,4,0,2,3,7,6,3,7,0,7,7,8,4,0,2,7,5,5,6,8,7,8,6,9,6,0,1,9,1,6,0,8,9,7,8,6,6,9,6,7,6,1,6,3,2,6,4,9,4,8,0,0,6,8,3,3,6,7,1,7,9,7,9,1,2,5,5,1,7,3,8,5,6,1,4,2,4,8,4,7,4,6,0,2,4,9,2,3,5,8,4,3,5,5,7,4,3,4,4,9,4,0,6,4,3,3,4,9,6,2,9,2,7,0,4,6,6,1,9,3,1,7,4,4,1,3,4,0,4,5,3,0,6,1,5,3,7,7,8,1,4,6,8,0,9,7,4,2,3,2,5,2,8,6,9,6,4,0,4,6,2,3,5,2,5,4,6,3,7,7,0,1,5,4,3,4,8,4,1,5,8,4,5,3,7,7,0,6,7,2,8,6,9,9,9,2,4,0,1,7,9,1,9,3,5,4,0,2,2,4,7,6,0,1,3,2,8,4,8,0,1,7,1,8,3,9,0,5,6,0,6,1,8,1,6,9,5,2,3,4,9,7,8,2,2,4,8,4,8,7,0,9,3,9,7,7,3,8,1,7,6,4,1,8,3,3,4,8,8,9,6,4,5,5,9,1,0,9,3,1,3,4,3,2,7,7,5,1,3,9,6,9,0,5,5,0,7,7,5,6,6,0,8,6,9,7,9,7,2,6,9,8,5,8,5,9,5,4,0,3,7,5,5,2,7,9,1,5,7,7,9,2,8,2,5,2,0,0,0,6,0,0,8,9,5,5,6,4,4,5,8,7,1,2,8,1,9,6,6,2,9,6,2,5,4,3,7,2,2,7,2,1,8,3,7,9,0,2,9,3,8,3,2,2,4,0,3,3,2,0,1,6,3,7,8,5,1,2,4,9,9,0,3,0,6,2,4,2,9,8,7,8,8,0,9,3,4,1,8,8,8,8,3,8,6,3,4,3,7,0,7,7,1,0,1,2,4,8,0,2,7,4,1,2,0,3,6,8,3,5,3,1,6,7,1,8,7,3,8,8,0,4,6,8,9,2,7,1,6,4,8,0,6,2,4,5,9,9,6,3,1,1,6,3,3,0,4,7,1,5,5,6,8,6,9,1,1,8,7,8,1,6,2,6,4,6,3,0,9,8,1,7,8,6,9,9,7,8,3,6,9,5,5,1,7,4,8,6,8,6,4,0,9,0,4,1,0,0,2,9,2,0,3,7,9,7,8,3,6,5,1,7,1,1,0,8,0,7,9,7,6,8,4,5,9,5,2,0,3,5,1,3,0,3,1,2,7,5,2,8,1,6,8,5,4,5,2,0,8,2,7,6,0,7,3,2,2,0,9,1,9,5,7,9,0,4,6,5,0,5,4,2,3,8,5,9,3,9,0,1,2,3,9,9,7,0,8,1,2,0,7,7,0,1,3,0,2,4,1,8,0,2,1,9,9,6,3,4,0,2,1,6,3,5,7,9,2,2,2,0,4,4,0,2,7,8,6,5,0,2,5,2,6,9,2,7,5,6,0,9,2,4,4,6,5,3,2,3,8,4,8,9,8,9,2,6,4,0,4,8,8,7,5,0,5,2,5,2,4,4,3,8,2,6,9,2,3,8,2,4,4,1,0,8,5,6,4,2,5,4,4,6,2,8,2,1,1,5,0,9,3,3,3,0,2,1,1,4,3,0,0,8,2,9,4,8,7,0,3,2,8,3,8,1,4,9,8,2,9,3,5,6,2,1,2,9,2,9,4,5,7,5,8,4,7,8,7,7,9,9,2,5,3,5,7,6,2,5,8,5,7,5,3,9,9,1,1,1,2,7,1,0,8,2,0,8,0,8,1,1,6,2,3,5,4,6,8,4,6,3,9,9,2,3,8,6,5,7,9,8,9,4,6,5,5,0,6,3,2,6,6,2,5,6,9,3,7,3,1,9,4,4,7,1,0,1,4,2,5,3,3,2,7,3,1,4,1,3,5,9,8,7,2,9,0,3,5,2,4,4,2,6,9,0,4,9,1,9,3,0,7,5,4,3,4,1,0,9,1,3,8,0,8,2,7,1,6,5,2,9,8,4,1,2,5,7,4,7,0,6,5,2,1,3,2,4,9,1,8,8,4,7,9,0,3,6,7,9,8,7,4,7,9,7,8,5,9,5,7,6,0,1,7,6,2,9,2,3,5,5,5,2,3,8,1,1,3,0,2,5,5,6,1,1,7,1,6,1,0,6,5,3,8,0,9,9,2,5,2,6,4,5,4,5,8,2,1,2,7,6,3,0,1,9,0,0,9,7,0,9,8,6,1,7,1,5,8,7,2,2,2,1,4,5,2,2,3,7,1,5,7,9,6,6,9,6,4,3,8,0,1,2,8,3,7,1,6,4,4,8,6,9,8,9,1,8,7,5,9,0,7,7,2,4,0,2,1,1,3,8,9,0,7,6,7,5,5,0,7,4,7,0,0,1,7,1,8,2,0,5,1,0,0,5,1,2,2,0,7,8,2,1,0,9,5,3,8,1,4,7,9,8,2,0,0,5,2,9,2,7,7,0,2,1,1,1,0,3,5,1,3,3,5,2,2,4,2,2,9,6,7,9,7,8,1,9,1,7,1,4,7,5,1,1,7,7,1,1,9,1,2,5,8,3,8,4,5,3,4,2,8,6,1,9,6,1,4,7,2,8,9,9,8,5,7,0,8,0,3,0,6,7,3,7,7,8,2,3,1,4,7,9,3,5,2,7,6,3,4,6,1,6,4,7,3,5,2,1,6,6,6,3,7,6,3,0,9,2,6,1,1,0,1,4,6,0,6,4,6,1,8,3,6,9,2,5,5,7,2,0,7,6,8,8,3,1,9,9,3,1,1,9,7,2,1,8,1,0,3,1,1,9,7,8,0,5,2,4,8,0,9,0,8,5,3,8,4,5,4,1,2,9,5,0,7,5,2,4,2,6,0,1,5,5,5,9,0,5,1,9,1,8,8,4,7,0,0,6,2,6,9,5,2,5,6,5,5,3,7,4,7,2,6,4,2,9,9,3,2,8,1,3,4,0,0,8,2,1,5,2,5,7,5,4,8,3,1,4,2,7,8,4,8,3,0,5,3,4,6,1,6,6,2,0,8,2,7,1,8,6,9,6,8,2,6,5,2,2,1,5,2,0,5,3,3,8,7,2,0,5,6,6,2,8,4,4,8,7,5,8,9,9,8,2,6,1,7,3,1,4,7,8,9,2,3,8,3,2,5,2,2,0,4,0,4,0,9,8,0,6,4,1,7,5,1,6,1,3,5,6,4,7,8,8,1,5,3,3,9,6,5,0,4,6,5,1,4,3,5,3,7,6,0,2,5,4,5,0,3,0,6,7,9,4,1,2,2,4,7,2,6,0,5,4,4,1,9,6,6,3,1,9,0,1,9,0,1,5,5,5,5,3,5,6,2,4,2,6,2,7,6,6,3,2,8,3,3,9,9,5,4,3,5,8,0,0,5,0,8,1,1,6,6,7,8,4,5,7,4,0,5,2,0,3,3,5,5,7,5,7,5,9,2,9,7,7,5,9,1,5,5,7,4,2,3,0,9,7,0,1,1,0,6,2,0,2,0,5,9,5,0,2,9,5,8,0,7,1,6,4,0,4,1,3,6,8,6,8,1,1,5,7,3,1,3,7,3,0,0,6,8,9,4,6,4,7,4,0,8,3,8,7,7,4,1,5,0,5,0,0,6,5,6,7,8,6,7,1,1,0,1,2,3,4,0,0,7,2,4,8,1,8,4,1,1,6,6,3,5,8,1,2,2,7,4,5,9,6,9,0,7,9,9,5,9,5,4,5,2,0,4,4,1,7,0,1,2,2,6,1,3,2,4,1,0,5,0,9,7,8,3,1,6,6,8,7,2,3,6,8,1,3,0,5,9,2,9,7,3,9,9,0,0,7,0,0,3,7,4,6,9,9,0,6,6,2,7,0,2,1,5,8,4,1,2,5,1,1,6,2,8,5,4,5,1,4,0,8,9,9,8,3,5,6,8,8,1,1,2,2,6,1,5,4,0,9,2,5,8,2,8,7,0,8,9,0,1,8,7,5,5,1,8,4,9,8,4,4,3,0,9,2,0,7,0,0,8,1,5,8,5,7,4,2,2,0,9,4,9,7,2,0,1,5,3,9,6,3,3,0,9,5,4,3,8,7,6,2,9,8,1,4,1,2,0,0,9,3,8,4,5,5,5,3,6,8,7,3,0,7,9,8,0,4,9,9,2,2,4,7,5,8,6,2,9,2,0,9,8,0,2,2,8,6,3,0,1,6,8,1,5,8,2,6,0,2,5,2,8,4,8,4,0,9,9,2,9,8,3,5,4,0,5,2,1,1,2,3,6,5,4,7,6,5,4,0,1,5,1,6,5,6,0,2,5,0,1,5,2,0,7,0,6,6,1,4,6,0,3,9,0,1,5,5,7,5,5,2,7,0,0,0,7,4,8,0,1,7,4,8,6,8,7,3,7,6,9,1,7,9,5,3,5,9,6,5,6,7,1,3,8,6,0,5,9,7,0,2,0,8,1,7,2,9,1,0,5,4,9,0,6,9,0,2,1,3,6,9,6,5,6,0,9,6,2,7,8,3,6,2,9,4,6,6,8,6,4,3,7,4,8,5,4,7,4,9,4,3,1,3,0,4,5,4,7,6,6,4,7,8,6,5,8,2,4,9,8,8,3,9,4,4,5,1,2,3,0,1,1,1,0,5,8,8,1,9,4,2,7,7,2,0,7,8,6,7,8,2,2,7,3,7,4,5,8,1,3,7,5,8,7,7,1,0,2,0,5,5,9,8,3,1,8,2,2,5,1,5,1,1,8,4,3,8,3,7,8,8,7,8,5,5,9,0,8,6,1,3,8,2,9,2,2,3,1,2,1,0,8,5,1,8,9,8,9,9,3,9,6,1,7,7,3,4,8,2,0,8,4,9,7,2,7,7,1,2,2,2,4,6,5,4,0,7,9,5,2,4,4,3,5,5,4,0,7,7,7,8,4,2,8,3,6,7,7,0,5,5,3,5,1,6,4,0,6,6,9,6,3,2,5,3,9,3,9,1,1,8,4,4,7,1,0,1,7,3,9,2,1,4,6,1,4,5,9,9,2,7,6,6,0,7,1,9,4,2,8,5,3,9,4,7,9,3,3,8,7,9,4,4,3,6,7,9,6,4,5,5,7,8,6,4,4,5,6,6,6,5,4,5,3,5,9,6,0,5,1,1,5,1,6,2,6,6,3,5,9,2,5,8,4,2,3,4,2,8,7,2,3,6,6,3,8,1,6,9,6,7,0,6,8,2,4,0,4,3,0,3,6,7,1,5,7,1,7,9,6,7,8,8,0,7,5,5,4,8,5,0,1,6,9,9,4,9,7,8,2,9,6,1,4,3,6,1,3,2,4,6,8,3,1,8,5,9,6,8,5,2,1,9,7,0,0,5,7,7,2,4,9,1,2,0,0,9,5,9,5,9,1,9,5,7,3,0,7,7,4,6,9,2,4,0,6,9,0,9,4,3,2,1,7,0,8,9,5,0,8,5,9,6,6,8,6,5,9,0,8,6,8,7,7,7,6,6,7,0,2,6,1,6,1,7,3,2,6,5,9,7,6,4,2,8,9,1,7,0,3,0,3,7,7,2,3,9,9,9,5,4,1,5,2,5,4,4,7,2,1,3,5,6,6,5,2,3,5,0,9,5,8,6,9,5,5,3,1,6,7,3,3,3,1,9,2,8,1,7,2,8,3,4,0,5,3,9,3,3,7,5,7,6,7,1,2,0,4,0,4,8,0,5,6,4,2,8,3,8,7,8,2,4,2,7,5,2,2,6,7,9,5,4,0,2,3,8,1,0,7,1,3,9,9,7,1,0,7,3,7,8,4,6,9,6,5,0,1,3,7,8,9,5,6,1,1,8,6,4,6,0,5,2,3,2,7,8,0,3,3,4,1,5,2,0,1,8,8,1,1,7,0,2,4,5,0,0,9,0,2,9,1,4,1,6,3,0,1,1,9,1,9,9,0,1,2,8,3,9,4,5,7,2,6,7,3,4,0,9,0,5,8,5,3,6,9,5,4,1,9,5,9,6,0,7,6,6,8,5,7,1,7,2,1,5,3,5,2,8,9,6,2,8,8,3,8,3,3,9,6,0,1,3,8,0,4,5,5,6,2,1,2,8,8,4,7,0,9,0,5,0,3,1,2,3,8,3,7,5,1,5,5,4,0,5,0,4,8,9,3,2,2,3,3,4,7,7,4,3,2,3,1,2,3,8,3,5,6,5,4,2,3,4,4,6,8,3,4,8,9,5,6,2,0,2,1,2,8,2,7,6,2,3,5,4,8,4,2,7,7,0,3,2,9,8,7,3,9,7,2,6,4,9,5,8,8,7,6,2,8,0,0,4,0,9,4,5,8,1,6,0,8,4,8,7,9,9,2,1,9,2,9,1,1,5,8,9,6,7,2,4,6,5,7,6,6,5,5,5,6,3,1,0,3,4,8,3,5,8,5,5,6,6,6,9,5,1,4,6,4,9,1,9,0,1,5,2,3,6,1,1,7,8,6,7,7,3,1,4,7,0,3,1,8,4,3,2,5,0,4,8,2,1,5,5,8,4,5,2,0,0,2,7,5,8,8,4,8,6,5,3,8,5,3,3,2,3,9,7,3,0,6,1,4,1,2,8,1,6,6,6,3,6,3,4,2,9,3,3,5,9,6,4,8,6,6,2,5,2,3,9,0,3,5,4,2,1,3,2,6,8,6,6,0,1,5,5,9,4,8,3,6,5,8,9,5,2,7,6,1,8,9,4,4,7,5,2,2,1,6,4,6,1,3,4,7,4,8,6,7,6,6,3,6,9,6,7,7,4,8,3,4,0,4,8,7,5,1,6,6,7,1,2,2,4,7,6,6,8,6,4,8,6,2,7,7,7,2,9,7,4,1,6,7,2,4,8,4,7,3,6,7,6,9,8,4,1,8,5,1,6,6,6,5,5,5,6,8,4,5,9,9,1,9,5,7,3,0,6,1,9,8,2,9,3,6,8,9,4,6,7,5,9,9,3,2,1,2,7,3,6,4,9,5,4,7,8,7,7,6,2,1,7,3,3,5,1,0,2,1,7,6,2,2,7,7,9,5,4,4,4,5,1,6,6,0,3,9,4,0,0,6,6,4,1,0,9,5,1,7,4,8,6,8,0,0,4,5,0,0,6,2,1,9,4,0,7,3,0,6,2,8,9,0,8,8,1,9,8,0,2,7,4,0,3,3,8,8,8,1,7,1,8,7,8,7,8,8,0,9,7,0,5,1,5,8,4,1,9,5,4,0,3,5,1,2,8,5,0,0,3,5,5,4,0,3,1,2,3,8,7,2,8,1,0,4,9,0,9,3,6,2,2,0,1,5,3,5,2,6,5,8,1,8,3,1,1,6,0,4,9,2,3,1,7,2,8,0,6,3,3,9,8,8,1,6,8,9,8,3,4,1,4,2,7,0,1,3,9,1,4,0,2,3,2,9,1,1,7,3,3,2,5,6,1,1,9,8,9,0,7,5,8,3,2,2,7,1,1,2,6,8,4,8,6,4,6,9,6,7,1,7,1,3,4,8,5,6,5,9,1,8,3,7,2,1,5,0,5,6,7,0,3,7,5,1,6,1,3,1,7,5,9,1,1,5,6,0,0,1,0,1,6,1,0,0,2,5,5,5,1,5,6,0,2,2,7,3,9,9,6,8,8,0,6,0,7,2,1,3,8,1,6,4,5,6,6,5,0,3,9,3,4,2,3,5,9,6,1,2,7,7,8,5,1,2,6,9,7,9,8,6,6,9,3,8,7,3,0,8,1,1,3,7,3,0,1,5,1,9,2,3,2,5,5,8,8,6,1,2,4,8,1,7,1,9,2,9,3,8,7,1,2,6,3,5,1,0,5,8,9,4,3,6,4,8,9,7,2,4,7,5,8,2,7,5,1,2,4,3,9,7,0,5,2,2,0,1,8,6,2,1,8,8,1,4,4,9,6,1,6,9,9,2,0,9,4,9,8,5,3,4,5,1,4,5,8,7,7,9,6,0,8,0,4,1,3,3,7,1,6,7,9,2,0,6,8,6,3,3,4,8,7,1,6,7,5,1,7,6,2,0,2,5,6,4,5,3,2,1,9,0,8,9,6,8,6,3,9,0,6,1,6,4,6,6,1,4,8,9,4,8,6,1,1,6,0,0,4,4,2,5,9,9,4,9,6,1,6,6,4,2,5,4,8,1,2,6,8,8,2,0,1,3,7,0,8,6,8,8,7,0,4,2,6,3,3,5,3,8,4,3,2,7,7,5,0,3,2,2,8,8,0,5,8,0,6,9,2,6,2,1,4,6,0,3,6,0,1,3,5,3,3,2,4,3,4,6,1,8,0,0,3,9,0,1,2,2,8,4,4,0,8,2,1,1,6,7,6,9,6,5,9,4,8,3,8,7,2,6,2,2,3,8,8,3,1,1,9,7,9,0,9,2,0,4,4,9,4,3,8,8,9,8,9,6,8,6,0,4,3,4,6,3,5,8,7,8,7,5,8,8,4,4,9,2,0,6,7,3,2,8,9,1,7,4,7,2,0,7,8,3,4,6,7,2,0,0,9,5,7,0,4,1,1,5,3,9,7,9,2,1,7,1,5,9,9,8,5,3,3,1,0,0,4,4,6,5,4,1,1,3,2,9,9,4,2,1,4,5,8,7,5,4,9,3,9,6,1,8,3,3,4,0,0,7,3,1,5,8,7,7,3,1,5,3,5,2,8,9,8,3,8,8,5,0,7,0,4,4,3,9,6,8,8,1,7,2,5,4,2,6,4,8,3,4,3,5,3,9,4,7,6,8,2,8,6,9,4,6,9,7,5,0,2,0,3,3,3,1,8,6,0,2,9,2,6,6,5,5,2,1,8,6,0,3,8,5,9,7,8,7,9,2,1,9,8,4,8,8,3,3,3,6,1,3,1,6,0,4,3,8,1,8,8,0,6,4,3,8,1,8,5,7,1,7,7,8,0,5,0,3,0,2,7,7,6,6,0,8,3,0,6,9,9,7,1,6,4,7,0,4,3,7,2,6,9,2,9,8,2,9,6,8,5,7,3,2,7,0,3,2,3,8,5,1,6,4,7,5,6,6,9,3,3,3,0,0,5,5,1,1,5,9,8,9,8,1,0,8,0,7,3,5,5,1,7,8,5,8,6,3,3,7,2,9,1,8,6,1,9,4,2,9,7,3,6,9,9,3,0,1,4,6,0,5,4,8,9,3,4,9,1,9,0,5,0,5,1,4,7,2,1,4,9,4,4,6,6,9,1,4,5,7,4,4,9,8,2,6,2,6,3,9,8,4,8,8,9,0,9,0,2,6,4,4,8,0,5,4,1,3,3,9,1,1,7,3,9,1,1,2,5,0,2,0,4,1,8,4,2,9,2,7,8,6,9,6,0,3,1,4,1,5,4,5,7,7,0,4,2,3,9,4,4,8,4,6,1,3,1,7,8,6,5,2,3,8,6,9,0,4,6,6,4,3,7,3,8,6,2,2,5,7,9,6,1,0,1,2,9,2,1,8,4,5,3,3,5,1,1,3,0,9,4,8,2,3,5,0,6,6,3,7,0,5,5,8,6,9,8,9,1,7,9,7,7,0,2,4,1,3,1,8,0,6,7,8,9,1,4,7,7,8,6,7,5,3,9,7,6,8,7,2,8,0,5,9,5,2,5,8,3,4,9,2,6,8,7,6,5,9,5,7,6,5,9,0,6,8,9,6,7,6,9,2,8,5,3,7,5,6,9,1,2,7,2,2,5,8,4,5,7,3,7,8,5,2,8,9,8,9,1,2,3,8,9,6,8,3,2,2,9,3,6,3,7,6,7,0,9,2,9,5,0,6,1,6,5,3,8,4,8,9,0,7,9,1,9,7,3,3,7,8,4,4,3,7,6,5,4,4,5,5,0,0,0,4,1,7,8,1,9,3,8,9,1,1,3,1,3,1,3,4,2,4,2,2,2,4,4,6,8,3,0,0,3,2,4,6,4,6,2,4,1,1,2,4,4,0,8,6,7,9,2,9,4,7,4,1,5,0,1,8,7,7,6,9,3,5,6,3,8,6,1,9,3,1,8,7,9,3,3,3,3,4,9,7,1,5,0,0,7,2,1,5,3,7,1,4,3,4,5,7,7,0,1,2,6,8,3,1,0,3,4,1,2,8,4,7,1,9,6,7,2,3,5,6,2,0,2,5,7,1,9,5,0,9,0,6,3,8,5,3,6,8,1,9,9,9,7,4,7,4,9,7,0,3,2,9,8,3,5,6,8,4,1,1,2,0,2,7,8,4,4,9,2,2,8,8,0,0,0,2,0,9,9,0,1,7,2,4,1,7,8,2,5,1,7,4,8,4,4,6,0,8,7,7,8,5,5,5,1,6,2,2,1,5,2,9,5,8,5,5,0,0,9,4,0,1,1,1,9,7,5,5,6,9,0,8,4,4,1,8,7,3,5,3,9,2,5,7,8,9,7,3,7,2,2,9,4,4,8,7,0,8,6,7,1,2,8,9,7,0,5,2,8,1,1,8,0,4,3,7,6,3,5,9,4,3,5,6,0,8,2,4,6,6,9,0,2,6,5,1,6,1,2,5,1,2,9,9,2,9,2,4,3,8,6,5,9,3,0,0,1,1,7,1,1,1,1,4,1,3,5,5,5,1,6,8,5,0,5,0,7,7,9,0,0,0,4,5,4,3,9,2,0,1,7,5,3,2,2,4,7,4,9,8,7,4,3,1,0,7,1,4,6,3,5,1,0,4,1,1,3,3,7,0,1,8,6,0,1,4,4,8,3,2,9,6,3,7,1,6,6,0,5,4,0,9,3,8,9,2,7,2,0,7,9,9,8,1,1,9,0,8,4,9,0,2,3,3,0,3,0,4,5,8,7,7,7,8,2,4,6,0,5,6,6,0,2,2,8,5,2,6,2,7,0,1,4,2,1,3,0,9,3,8,4,1,1,6,4,0,0,4,4,7,9,2,0,4,1,6,5,2,7,7,6,4,4,1,3,4,5,7,1,6,0,8,4,6,1,3,1,4,0,2,9,1,6,2,7,2,1,7,6,1,8,0,5,4,1,7,2,6,2,5,0,5,1,3,1,8,8,0,6,7,9,4,2,8,1,3,2,3,0,5,1,0,7,8,4,1,1,6,3,0,5,5,2,9,0,5,4,9,3,7,3,3,6,6,9,3,9,8,2,4,9,7,2,7,1,4,4,9,7,9,1,8,8,8,5,7,4,5,6,1,0,3,6,6,4,3,0,7,2,6,2,6,6,0,0,0,5,8,8,4,3,4,8,5,8,3,4,4,0,9,5,7,1,4,9,6,8,1,4,8,6,4,4,2,7,1,2,1,2,3,6,2,4,6,1,0,3,8,5,4,3,2,3,4,4,8,0,7,0,3,9,7,8,0,1,9,0,7,5,7,6,6,6,2,4,6,6,5,2,7,3,4,1,6,0,9,0,1,6,8,8,7,0,8,0,0,9,8,6,3,3,0,2,2,8,6,1,3,5,8,0,6,6,8,2,1,2,8,9,9,7,3,9,0,3,7,0,6,5,8,3,2,7,7,5,6,3,0,6,5,7,5,3,8,7,5,2,4,1,0,2,3,4,2,1,0,9,2,1,5,9,5,1,2,5,5,8,0,5,1,4,7,1,7,0,7,1,9,3,8,2,8,9,5,7,9,7,9,6,2,7,4,0,3,2,7,3,0,7,9,8,5,3,8,2,4,4,4,2,1,6,2,1,3,0,5,1,4,9,8,2,0,7,5,4,9,8,9,8,9,9,5,1,0,6,7,3,5,9,0,4,8,0,6,4,8,7,1,1,3,5,0,0,3,8,7,4,5,2,8,7,7,7,1,6,7,0,7,4,8,7,5,7,5,3,3,0,3,2,4,8,8,3,1,3,0,9,7,4,6,8,0,7,4,0,4,7,1,1,0,7,8,9,1,9,7,3,2,8,6,7,5,0,2,8,0,6,3,5,7,5,7,9,7,0,8,9,9,7,3,5,3,4,1,4,6,4,1,6,1,3,5,7,7,3,0,7,3,3,4,8,4,2,5,3,6,1,7,5,1,8,9,7,0,0,6,2,6,6,3,1,2,9,2,5,7,0,6,0,5,3,6,9,7,2,1,3,5,0,0,2,2,2,2,1,9,0,2,3,7,7,6,9,4,7,3,9,7,7,4,5,4,4,3,0,8,1,1,6,8,2,4,1,7,3,8,6,8,2,4,2,8,0,5,9,8,3,6,1,7,3,8,8,0,6,6,0,3,6,6,9,9,7,5,6,1,1,9,6,8,1,3,4,4,5,7,0,9,3,2,5,5,2,3,4,8,9,9,2,5,8,3,4,7,6,6,3,5,3,4,6,0,2,6,3,8,5,9,6,1,5,5,5,7,5,3,0,3,3,2,6,8,1,0,2,3,1,4,7,6,8,2,5,3,9,3,5,4,0,4,7,4,3,5,3,6,9,3,9,4,8,6,7,7,6,4,8,3,4,7,3,4,4,1,0,6,1,1,0,0,7,6,4,6,9,8,4,3,9,3,8,6,5,4,7,8,9,7,1,3,8,8,2,5,6,2,1,6,3,5,0,9,0,6,4,5,9,2,3,2,8,2,9,3,7,0,4,1,9,2,0,4,0,8,2,3,8,1,4,2,3,4,3,4,1,5,4,0,1,7,0,8,4,0,8,6,5,6,9,2,0,2,4,2,9,8,8,2,8,9,8,9,2,9,9,7,8,3,7,3,2,1,7,2,3,0,4,1,5,6,5,5,0,2,8,3,0,3,8,9,4,7,9,6,8,2,4,8,4,6,6,1,4,5,8,2,3,5,1,8,9,6,5,2,8,3,7,5,3,1,9,7,5,3,3,2,0,3,0,6,1,1,5,0,7,1,4,5,7,8,1,8,5,9,3,1,9,7,0,4,0,8,1,7,5,7,0,7,8,6,1,3,9,1,2,2,8,4,3,5,0,1,4,7,9,9,1,1,3,4,3,4,0,1,3,8,9,6,3,6,6,3,6,2,4,0,1,0,9,8,1,0,8,4,3,4,6,5,6,0,7,2,5,0,2,2,8,5,9,1,2,1,2,8,6,6,1,0,7,9,1,5,7,9,8,7,1,7,3,8,0,3,0,6,6,3,6,4,7,0,1,2,9,2,1,6,9,4,2,9,1,8,0,7,3,1,3,9,8,5,4,7,0,5,1,5,9,8,0,7,0,7,8,7,4,1,5,1,1,1,5,1,3,3,6,1,2,8,1,4,0,6,6,4,1,2,7,2,6,7,4,1,7,7,7,7,9,3,2,2,7,1,2,6,4,9,1,5,2,1,6,7,5,7,3,5,2,8,8,7,1,5,6,0,1,6,2,2,2,3,1,2,9,0,2,3,0,2,1,8,0,9,2,8,5,5,9,0,9,5,6,0,9,8,9,2,7,1,5,4,3,2,1,3,9,3,7,9,6,6,0,0,8,2,9,9,1,2,7,1,4,9,6,2,1,9,6,7,2,2,8,2,0,1,3,8,7,8,2,2,2,0,0,8,7,2,2,2,5,4,0,0,8,2,2,0,6,5,5,3,6,4,3,8,6,2,3,8,6,3,8,9,8,3,9,9,4,9,3,9,7,8,5,0,9,2,6,2,3,9,5,4,2,3,4,2,1,5,6,6,2,5,0,9,2,3,8,6,2,0,4,9,2,3,0,2,1,4,6,1,2,0,1,3,0,4,3,8,7,1,9,6,5,3,8,5,3,4,5,1,5,0,3,4,8,0,5,5,5,0,1,4,6,9,5,8,8,7,4,4,6,8,3,6,2,3,5,3,4,4,0,3,2,7,9,8,1,0,3,7,5,5,5,4,3,1,3,5,7,9,9,6,1,1,1,3,4,5,7,5,6,9,5,7,9,0,5,4,4,6,5,7,7,4,5,1,8,9,6,9,9,6,3,8,7,8,2,0,2,3,6,7,2,5,5,4,0,4,6,6,0,4,8,3,0,0,3,7,6,4,7,2,2,4,0,9,3,6,7,4,6,9,3,0,1,6,5,3,8,5,9,6,3,5,1,7,5,8,0,4,5,7,8,7,2,3,7,6,4,2,7,3,1,0,6,9,1,2,7,5,2,6,6,8,9,7,3,4,9,9,7,6,2,1,3,9,0,6,8,7,7,2,5,5,0,3,3,2,8,1,2,0,5,6,9,0,3,4,7,3,9,2,5,8,1,1,0,7,5]"

	obj := Constructor()
	root := obj.deserialize(testcase)
	data := obj.serialize(root)
	ans := obj.deserialize(data)
	fmt.Println("data=", data, "ans=", ans)
}

type TreeNode struct {
	Val   int
	Left  *TreeNode
	Right *TreeNode
}

/**
 * Definition for a binary tree node.
 * type TreeNode struct {
 *     Val int
 *     Left *TreeNode
 *     Right *TreeNode
 * }
 */

type Codec struct {
}

func Constructor() Codec {
	c := Codec{}
	return c
}

// Serializes a tree to a single string.
func (this *Codec) serialize(root *TreeNode) string {

	var nodeMap = make(map[int][]*TreeNode)
	nodeMap[1] = []*TreeNode{root}

	var ret = make([]string, 0)

	for l := 1; ; l++ {
		cNodeList := nodeMap[l]
		var hasNext = false
		if nodeMap[l+1] == nil {
			nodeMap[l+1] = make([]*TreeNode, 0)
		}
		for _, node := range cNodeList {
			var val string
			if node != nil {
				val = strconv.Itoa(node.Val)
			} else {
				val = "null"
			}
			ret = append(ret, val)
			if node == nil {
				continue
			}
			if !hasNext && (node.Left != nil || node.Right != nil) {
				hasNext = true
			}
			nodeMap[l+1] = append(nodeMap[l+1], node.Left)
			nodeMap[l+1] = append(nodeMap[l+1], node.Right)
		}
		if !hasNext {
			break
		}
	}
	var bf bytes.Buffer
	bf.WriteString("[")
	for i := 0; i < len(ret); i++ {
		bf.WriteString(ret[i])
		if i != len(ret)-1 {
			bf.WriteString(",")
		}
	}
	bf.WriteString("]")
	return bf.String()
}

// Deserializes your encoded data to tree.
func (this *Codec) deserialize(data string) *TreeNode {
	var root *TreeNode
	data = strings.Trim(data, "[]")
	var sList = strings.Split(data, ",")
	var nodeList = make([]*TreeNode, len(sList))
	for i, s := range sList {
		if s == "null" {
			nodeList[i] = nil
		} else {
			is, _ := strconv.Atoi(s)
			nodeList[i] = &TreeNode{is, nil, nil}
		}
	}
	root = nodeList[0] // 固定根节点
	var parentNodeList = make([]*TreeNode, 0)
	var currentNodeList = make([]*TreeNode, 1)
	currentNodeList[0] = root
	var level int
	var pIndex int
	for i, j := 1, 2; i <= len(nodeList)-1; i, j = i+2, j+2 {
		var leftNode, rightNode *TreeNode
		if j > len(nodeList)-1 {
			leftNode, rightNode = nodeList[i], nil
		} else {
			leftNode, rightNode = nodeList[i], nodeList[j]
		}
		// get parent node index
		if pIndex > len(parentNodeList)-1 {
			// 进入到了下一层
			level++
			pIndex = 0
			parentNodeList = currentNodeList
			currentNodeList = nil
		}
		// 当前层
		parentNodeList[pIndex].Left = leftNode
		parentNodeList[pIndex].Right = rightNode
		pIndex++

		if currentNodeList == nil {
			currentNodeList = make([]*TreeNode, 0)
		}
		if leftNode != nil {
			currentNodeList = append(currentNodeList, leftNode)
		}
		if rightNode != nil {
			currentNodeList = append(currentNodeList, rightNode)
		}
	}

	return root
}

/**
 * Your Codec object will be instantiated and called as such:
 * obj := Constructor();
 * data := obj.serialize(root);
 * ans := obj.deserialize(data);
 */
